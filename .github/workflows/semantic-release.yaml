name: semantic-release
on:
  workflow_call:
    
jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # fixed: https://github.com/python-semantic-release/python-semantic-release/issues/721
      - name: Find version.py
        id: find_version_dot_py
        run: |
          echo "version_dot_py_path=$(find * -name "version.py" | head -n 1)" >> $GITHUB_OUTPUT
      - name: Config python-semantic-release
        env:
          VERSION_DOT_PY_PATH: ${{ steps.find_version_dot_py.outputs.version_dot_py_path }}
        run: |
          cat <<EOF > .semantic-release.toml
          [tool.semantic_release]
          assets = []
          build_command_env = []
          commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
          commit_parser = "angular"
          logging_use_named_masks = true #
          major_on_zero = true
          allow_zero_version = true
          no_git_verify = false
          tag_format = "{version}" #
          version_variables = [
              "${VERSION_DOT_PY_PATH}:__version__" #
          ]

          [tool.semantic_release.branches.main]
          match = "(main|master)"
          prerelease_token = "rc"
          prerelease = false

          [tool.semantic_release.changelog]
          template_dir = "templates"
          changelog_file = "CHANGELOG.md"
          exclude_commit_patterns = []

          [tool.semantic_release.changelog.environment]
          block_start_string = "{%"
          block_end_string = "%}"
          variable_start_string = "{{"
          variable_end_string = "}}"
          comment_start_string = "{#"
          comment_end_string = "#}"
          trim_blocks = false
          lstrip_blocks = false
          newline_sequence = "\n"
          keep_trailing_newline = false
          extensions = []
          autoescape = true

          [tool.semantic_release.commit_author]
          env = "GIT_COMMIT_AUTHOR"
          default = "semantic-release <semantic-release>"

          [tool.semantic_release.commit_parser_options]
          allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
          minor_tags = ["feat"]
          patch_tags = ["fix", "perf"]
          default_bump_level = 0

          [tool.semantic_release.remote]
          name = "origin"
          type = "github"
          ignore_token_for_push = false
          insecure = false

          [tool.semantic_release.publish]
          dist_glob_patterns = ["dist/*"]
          upload_to_vcs_release = true
          EOF

          echo "INFO::Semantic release configuration:"
          cat .semantic-release.toml

          git config --global --add safe.directory ${PWD}
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          root_options: "-c .semantic-release.toml -v"