name: codebook-profile-build
on:
  workflow_call:
    inputs:
      jhub_ver:
        required: true
        type: string
      py_ver:
        required: true
        type: string
      workflow_version:
        required: true
        type: string
    secrets:
      DEPLOY_SSH_KEY_BASE64:
        required: true
      DOCKER_REGISTRY_HOST:
        required: true
      DOCKER_REGISTRY_REPO:
        required: true
      DOCKER_REGISTRY_USERNAME:
        required: true
      DOCKER_REGISTRY_PASSWORD:
        required: true
jobs:
  ## Build/Publish codebook env image
  build_codebook_image:
    runs-on: ubuntu-latest
    env:
      JHUB_VER: ${{inputs.jhub_ver}}
      PY_VER: ${{inputs.py_ver}}
      WORKFLOW_VERSION: ${{inputs.workflow_version}}
    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v4
        with:
          path: 'main'
      - name: Checkout cicd repo that has common docker template
        uses: actions/checkout@v4
        with:
          # repository: 'dj-sciops/.github'
          repository: 'yambottle/dj-sciops.github'
          path: 'cicd'
      - id: build_env
        name: Build codebook env image
        run: |
          ## Get docker template
          cp -r ./cicd/docker-template/codebook-profile ./main/docker/

          ## Get build info
          cd ./main/docker/codebook-profile
          export REPO_NAME=${{github.event.repository.name}}
          export REPO_OWNER=${{github.repository_owner}}

          echo "${{secrets.DEPLOY_SSH_KEY_BASE64}}" | base64 -di >> ${REPO_NAME}-deploy.pem
          chmod u=r,g-rwx,o-rwx ${REPO_NAME}-deploy.pem
          export DEPLOY_KEY=${REPO_NAME}-deploy.pem

          ## Build image
          docker-compose build
      - name: Login to vathes Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Push codebook image
        run: |
          export IMAGE=${{ secrets.DOCKER_REGISTRY_HOST }}/${{ secrets.DOCKER_REGISTRY_REPO }}/codebook_${{github.event.repository.name}}
          export TAG=singleuser-${{env.JHUB_VER}}-py${{env.PY_VER}}-${{env.WORKFLOW_VERSION}}
          echo ${IMAGE} ${TAG}
          docker push "${IMAGE}:${TAG}"